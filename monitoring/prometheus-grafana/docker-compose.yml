version: "3"

services:
    
  prometheus:
    image: prom/prometheus:v1.8.2
    ports:
      - "9090:9090"
    networks:
      - monitoring
    volumes:
      - /home/matt/docker-swarm/data/prometheus/data:/prometheus
      - /home/matt/docker-swarm/data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/matt/docker-swarm/data/prometheus/rules:/etc/prometheus-rules
    command: "-config.file=/etc/prometheus/prometheus.yml -alertmanager.url http://alertmanager:9093 -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles"
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "prometheus"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "prometheus"
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: prometheus

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8081:8080"
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "cadvisor"
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "cadvisor"
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: cadvisor

  node-exporter:
    image: basi/node-exporter:v0.1.1
    ports:
      - "9100:9100"
    networks:
      - monitoring
    environment:
      - HOST_HOSTNAME=/etc/hostname
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/hostname
    command: [ -collector.procfs=/host/proc,-collector.sysfs=/host/proc,-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)",-collector.textfile.directory=/etc/node-exporter/]
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "node-exporter"
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "node-exporter"              
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: node-exporter

  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    networks:
      - monitoring
    volumes:
      - /home/matt/docker-swarm/data/alertmanager/alertmanagerconfig.yml:/etc/alertmanager/alertmanagerconfig.yml
      - /home/matt/docker-swarm/data/alertmanager/data:/etc/alertmanager/data
    command: [-config.file=/etc/alertmanager/alertmanagerconfig.yml,-storage.path=/alertmanager/data]
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "alertmanager"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "alertmanager"
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: alertmanager

  elastalert:
    image: ivankrizsan/elastalert:0.1.8
    ports:
      - "3030:3030"
    networks:
      - logging
    environment:
      - ELASTALERT_CONFIG=elastalertconfig.yaml
      - CONFIG_DIR=/opt/config
      - LOG_DIR=/opt/logs
      - ELASTALERT_CONFIG=/opt/config/elastalertconfig.yaml
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTALERT_SUPERVISOR_CONF=/opt/config/elastalert_supervisord.conf
    volumes:
      - /home/matt/docker-swarm/data/elastalert/config:/opt/config
      - /home/matt/docker-swarm/data/elastalert/rules:/opt/rules
      - /home/matt/docker-swarm/data/elastalert/logs:/opt/logs
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "elastalert"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "elastalert"
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: elastalert

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
      - logging
      - proxy
    volumes:
      - /home/matt/docker-swarm/data/grafana:/var/lib/grafana
    command: -e "GF_SERVER_ROOT_URL=http://grafana.local.com GF_SECURITY_ADMIN_PASSWORD=admin PROMETHEUS_ENDPOINT=http://prometheus:9090 ELASTICSEARCH_ENDPOINT=http://elasticsearch:9200"
    labels:
      com.docker.stack.namespace: "monitoring"
      com.docker.service.name: "grafana"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        com.docker.stack.namespace: "monitoring"
        com.docker.service.name: "grafana"
        com.df.notify: "true"
        com.df.distribute: "true"
        com.df.serviceDomain: "grafana.basement.lan"
        com.df.port: "3000"
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: grafana

networks:
  logging:
      external: true
  monitoring:
      external: true
  proxy:
      external: true
